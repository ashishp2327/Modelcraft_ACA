{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[{"file_id":"15vHWnYMbm8qa6oIe6QJraKKRX3YY16BW","timestamp":1717221572765},{"file_id":"156aGz9QytU-hTB4mNpIXumvaBUMA8kd0","timestamp":1717048404815}]},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","execution_count":4,"metadata":{"id":"EnUpdXTbwnfM","executionInfo":{"status":"ok","timestamp":1751475165892,"user_tz":-330,"elapsed":1196,"user":{"displayName":"Ashish Porwal","userId":"08640336265301712342"}}},"outputs":[],"source":["import numpy as np\n","import pandas as pd\n","import seaborn as sns\n","import matplotlib.pyplot as plt"]},{"cell_type":"code","source":["import pandas as pd\n","df = pd.read_csv(\"/content/Uncleaned_DS_jobs.csv\")"],"metadata":{"id":"e9CNSVlQzb2w","executionInfo":{"status":"ok","timestamp":1751475558583,"user_tz":-330,"elapsed":609,"user":{"displayName":"Ashish Porwal","userId":"08640336265301712342"}}},"execution_count":18,"outputs":[]},{"cell_type":"markdown","source":[],"metadata":{"id":"H9jQLilTVkZv"}},{"cell_type":"code","source":["import pandas as pd\n","df.head() # shows first 5 rows by default"],"metadata":{"id":"7Gd5qN33zvJB","colab":{"base_uri":"https://localhost:8080/","height":486},"executionInfo":{"status":"ok","timestamp":1751475561482,"user_tz":-330,"elapsed":520,"user":{"displayName":"Ashish Porwal","userId":"08640336265301712342"}},"outputId":"6d8a4abd-2751-4a2d-9b47-65597664fa87"},"execution_count":19,"outputs":[{"output_type":"execute_result","data":{"text/plain":["   index          Job Title               Salary Estimate  \\\n","0      0  Sr Data Scientist  $137K-$171K (Glassdoor est.)   \n","1      1     Data Scientist  $137K-$171K (Glassdoor est.)   \n","2      2     Data Scientist  $137K-$171K (Glassdoor est.)   \n","3      3     Data Scientist  $137K-$171K (Glassdoor est.)   \n","4      4     Data Scientist  $137K-$171K (Glassdoor est.)   \n","\n","                                     Job Description  Rating  \\\n","0  Description\\n\\nThe Senior Data Scientist is re...     3.1   \n","1  Secure our Nation, Ignite your Future\\n\\nJoin ...     4.2   \n","2  Overview\\n\\n\\nAnalysis Group is one of the lar...     3.8   \n","3  JOB DESCRIPTION:\\n\\nDo you have a passion for ...     3.5   \n","4  Data Scientist\\nAffinity Solutions / Marketing...     2.9   \n","\n","              Company Name       Location            Headquarters  \\\n","0         Healthfirst\\n3.1   New York, NY            New York, NY   \n","1             ManTech\\n4.2  Chantilly, VA             Herndon, VA   \n","2      Analysis Group\\n3.8     Boston, MA              Boston, MA   \n","3             INFICON\\n3.5     Newton, MA  Bad Ragaz, Switzerland   \n","4  Affinity Solutions\\n2.9   New York, NY            New York, NY   \n","\n","                      Size  Founded        Type of ownership  \\\n","0   1001 to 5000 employees     1993   Nonprofit Organization   \n","1  5001 to 10000 employees     1968         Company - Public   \n","2   1001 to 5000 employees     1981  Private Practice / Firm   \n","3    501 to 1000 employees     2000         Company - Public   \n","4      51 to 200 employees     1998        Company - Private   \n","\n","                                Industry             Sector  \\\n","0                     Insurance Carriers          Insurance   \n","1                 Research & Development  Business Services   \n","2                             Consulting  Business Services   \n","3  Electrical & Electronic Manufacturing      Manufacturing   \n","4                Advertising & Marketing  Business Services   \n","\n","                      Revenue  \\\n","0    Unknown / Non-Applicable   \n","1      $1 to $2 billion (USD)   \n","2  $100 to $500 million (USD)   \n","3  $100 to $500 million (USD)   \n","4    Unknown / Non-Applicable   \n","\n","                                         Competitors  \n","0            EmblemHealth, UnitedHealth Group, Aetna  \n","1                                                 -1  \n","2                                                 -1  \n","3  MKS Instruments, Pfeiffer Vacuum, Agilent Tech...  \n","4               Commerce Signals, Cardlytics, Yodlee  "],"text/html":["\n","  <div id=\"df-babdc4b2-a55c-494f-9611-8165deb95178\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>index</th>\n","      <th>Job Title</th>\n","      <th>Salary Estimate</th>\n","      <th>Job Description</th>\n","      <th>Rating</th>\n","      <th>Company Name</th>\n","      <th>Location</th>\n","      <th>Headquarters</th>\n","      <th>Size</th>\n","      <th>Founded</th>\n","      <th>Type of ownership</th>\n","      <th>Industry</th>\n","      <th>Sector</th>\n","      <th>Revenue</th>\n","      <th>Competitors</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>0</td>\n","      <td>Sr Data Scientist</td>\n","      <td>$137K-$171K (Glassdoor est.)</td>\n","      <td>Description\\n\\nThe Senior Data Scientist is re...</td>\n","      <td>3.1</td>\n","      <td>Healthfirst\\n3.1</td>\n","      <td>New York, NY</td>\n","      <td>New York, NY</td>\n","      <td>1001 to 5000 employees</td>\n","      <td>1993</td>\n","      <td>Nonprofit Organization</td>\n","      <td>Insurance Carriers</td>\n","      <td>Insurance</td>\n","      <td>Unknown / Non-Applicable</td>\n","      <td>EmblemHealth, UnitedHealth Group, Aetna</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>1</td>\n","      <td>Data Scientist</td>\n","      <td>$137K-$171K (Glassdoor est.)</td>\n","      <td>Secure our Nation, Ignite your Future\\n\\nJoin ...</td>\n","      <td>4.2</td>\n","      <td>ManTech\\n4.2</td>\n","      <td>Chantilly, VA</td>\n","      <td>Herndon, VA</td>\n","      <td>5001 to 10000 employees</td>\n","      <td>1968</td>\n","      <td>Company - Public</td>\n","      <td>Research &amp; Development</td>\n","      <td>Business Services</td>\n","      <td>$1 to $2 billion (USD)</td>\n","      <td>-1</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>2</td>\n","      <td>Data Scientist</td>\n","      <td>$137K-$171K (Glassdoor est.)</td>\n","      <td>Overview\\n\\n\\nAnalysis Group is one of the lar...</td>\n","      <td>3.8</td>\n","      <td>Analysis Group\\n3.8</td>\n","      <td>Boston, MA</td>\n","      <td>Boston, MA</td>\n","      <td>1001 to 5000 employees</td>\n","      <td>1981</td>\n","      <td>Private Practice / Firm</td>\n","      <td>Consulting</td>\n","      <td>Business Services</td>\n","      <td>$100 to $500 million (USD)</td>\n","      <td>-1</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>3</td>\n","      <td>Data Scientist</td>\n","      <td>$137K-$171K (Glassdoor est.)</td>\n","      <td>JOB DESCRIPTION:\\n\\nDo you have a passion for ...</td>\n","      <td>3.5</td>\n","      <td>INFICON\\n3.5</td>\n","      <td>Newton, MA</td>\n","      <td>Bad Ragaz, Switzerland</td>\n","      <td>501 to 1000 employees</td>\n","      <td>2000</td>\n","      <td>Company - Public</td>\n","      <td>Electrical &amp; Electronic Manufacturing</td>\n","      <td>Manufacturing</td>\n","      <td>$100 to $500 million (USD)</td>\n","      <td>MKS Instruments, Pfeiffer Vacuum, Agilent Tech...</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>4</td>\n","      <td>Data Scientist</td>\n","      <td>$137K-$171K (Glassdoor est.)</td>\n","      <td>Data Scientist\\nAffinity Solutions / Marketing...</td>\n","      <td>2.9</td>\n","      <td>Affinity Solutions\\n2.9</td>\n","      <td>New York, NY</td>\n","      <td>New York, NY</td>\n","      <td>51 to 200 employees</td>\n","      <td>1998</td>\n","      <td>Company - Private</td>\n","      <td>Advertising &amp; Marketing</td>\n","      <td>Business Services</td>\n","      <td>Unknown / Non-Applicable</td>\n","      <td>Commerce Signals, Cardlytics, Yodlee</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-babdc4b2-a55c-494f-9611-8165deb95178')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-babdc4b2-a55c-494f-9611-8165deb95178 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-babdc4b2-a55c-494f-9611-8165deb95178');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","    <div id=\"df-fe6e0195-26fb-48df-9588-0e0bc7b89c7a\">\n","      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-fe6e0195-26fb-48df-9588-0e0bc7b89c7a')\"\n","                title=\"Suggest charts\"\n","                style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","      </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","      <script>\n","        async function quickchart(key) {\n","          const quickchartButtonEl =\n","            document.querySelector('#' + key + ' button');\n","          quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","          quickchartButtonEl.classList.add('colab-df-spinner');\n","          try {\n","            const charts = await google.colab.kernel.invokeFunction(\n","                'suggestCharts', [key], {});\n","          } catch (error) {\n","            console.error('Error during call to suggestCharts:', error);\n","          }\n","          quickchartButtonEl.classList.remove('colab-df-spinner');\n","          quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","        }\n","        (() => {\n","          let quickchartButtonEl =\n","            document.querySelector('#df-fe6e0195-26fb-48df-9588-0e0bc7b89c7a button');\n","          quickchartButtonEl.style.display =\n","            google.colab.kernel.accessAllowed ? 'block' : 'none';\n","        })();\n","      </script>\n","    </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"df","summary":"{\n  \"name\": \"df\",\n  \"rows\": 672,\n  \"fields\": [\n    {\n      \"column\": \"index\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 194,\n        \"min\": 0,\n        \"max\": 671,\n        \"num_unique_values\": 672,\n        \"samples\": [\n          361,\n          158,\n          481\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Job Title\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 172,\n        \"samples\": [\n          \"Senior Data & Machine Learning Scientist\",\n          \"Weapons and Sensors Engineer/Scientist\",\n          \"Data Science Analyst\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Salary Estimate\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 30,\n        \"samples\": [\n          \"$87K-$141K (Glassdoor est.)\",\n          \"$112K-$116K (Glassdoor est.)\",\n          \"$66K-$112K (Glassdoor est.)\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Job Description\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 489,\n        \"samples\": [\n          \"Data Engineer\\n\\nDescription\\nUST Global is looking for Data Engineer to build end to end business solutions and to work with one of the leading healthcare providers in US. The ideal candidate must possess excellent background on Kafka. The candidate must possess excellent written and verbal communication skills with the ability and collaborate effectively with domain and technical experts in the team\\nRequirements\\nData engineering services required\\nBuild data products and processes alongside the core engineering and technology team\\nCollaborate with senior data scientists to curate, wrangle, and prepare data for use in their advanced analytical models\\nIntegrate data from a variety of sources, assuring that they adhere to data quality and accessibility standards\\nModify and improve data engineering processes to handle ever larger, more complex, and more types of data sources and pipelines\\nUse Hadoop architecture and HDFS commands to design and optimize data queries at scale\\nEvaluate and experiment with novel data engineering tools and advises information technology leads and partners about new capabilities to determine optimal solutions for particular technical problems or designated use cases\\nBig data engineering skills\\n5 years of hands on experience in one or more modern Object Oriented Programming languages Java, Scala, Python including the ability to code in more than one programming language.\\n5 years of hands on experience applying principles, best practices, and trade offs of schema design to different database systems, including relational Oracle, MSSQL, Postgres, MySQL and NoSQL HBase, Cassandra, MongoDB\\n2 years of hands on experience implementing batch and real time data integration frameworks and or applications in private or public cloud environments AWS, Azure, GCP, etc. using various technologies Hadoop, Spark, Impala, etc. , including assessing performance, debugging, and fine tuning those systems\\nDeep understanding of the latest data science and data engineering methods and processes to develop impactful and reusable patterns and abstractions from enterprise level data assets\\n3 years of hands on experience in all phases of data modeling from conceptualization to database optimization\\nDemonstrated ability to perform the engineering necessary to acquire, ingest, cleanse, integrate, and structure massive volumes of data from multiple sources and systems into enterprise analytics platforms\\nProven ability to design and optimize queries to build scalable, modular, efficient data pipelines\\nAbility to work across structured, semi structured, and unstructured data, extracting information and identifying linkages across disparate data sets\\nProven experience delivering production ready data engineering solutions, including requirements definition, architecture selection, prototype development, debugging, unit testing, deployment, support, and maintenance\\nAbility to operate with a variety of data engineering tools and technologies vendor agnostic candidates preferred\\nDomain and industry knowledge\\nStrong collaboration and communication skills to work within and across technology teams and business units\\nDemonstrates the curiosity, interpersonal abilities, and organizational skills necessary to serve as a consulting partner, includes the ability to uncover, understand, and assess the needs of various business stakeholders\\nExperience with problem discovery, solution design, and insight delivery that involves frequent interaction, education, engagement, and evangelism with senior executives\\nIdeal candidate will have extensive experience with the creation and delivery of advanced analytics solutions for healthcare payers or insurance companies, including anomaly detection, provider optimization, studies of sources of fraud, waste, and abuse, and analysis of clinical and economic outcomes of treatment and wellness programs involving medical or pharmacy claims data, electronic medical record data, or other health data\\nExperience with healthcare providers, pharma, or life sciences is a plus\\nExperience with Kafka is required\\nLocation\\nThis position is based in Atlanta, GA Chicago, IL Chandler AZ Richmond VA Norfork VA Mason OH Work from home in any of the above mentioned locations is acceptable but not preferred. UST will provide relocation assistance for full time employment.\\n\\nBTECH or higher\",\n          \"We love programming and the excitement that comes with building something people use. We are the kind of people that love talking to users and can find the balance between solving a problem quickly and thinking about how your code will work in the future. We love to move fast, keep learning and get stuff done.\\n\\nOur data science team is still in its early days and you'll have a big impact on our direction and how we operate. You'll be central to researching, developing and shipping products that help our customers learn and grow from their data. For this role, we're looking for people who have developed split brains--software engineers who have become great at writing machine learning code or data scientists who have become great software developers.\\n\\nTechnologies we use (not comprehensive!):\\nPython\\n\\nNumpy, Scipy, Pandas\\n\\nAurora, Cassandra, Kafka\\n\\nHTML, JavaScript, React\\n\\nSageMaker\\n\\nHow you will make a difference:\\n\\n\\nAnalyze large data sets (we're collecting billions of individual actions every month).\\nBuild products that enable our customers to grow faster and communicate more effectively with their customers.\\nDevelop machine learning models and pipelines for research and production.\\n\\nWho You Are:\\n\\n\\nHave experience implementing machine learning models, data pipelines and testing frameworks for research and production use.\\nHave demonstrated a measurable impact based on the models you've created. It's not always easy getting a model correct, we love talking about places we got stuck and work as a team to think through ideas that could unblock us.\\nHave experience processing cloud-scale data using parallel, elastic, streaming and similar techniques.\\nEnjoy tuning and validating machine learning models and take a rigorous approach.\\nUnderstand how to profile code and optimize performance.\\nAspire to correctness (e.g. in your code, in drawing conclusions from data)\\nHave a bachelor's or advanced degree in computer science, applied math, statistics or other relevant quantitative discipline, or equivalent industry experience.\\n\\nGet to know Klaviyo\\n\\nKlaviyo is the world's leading owned marketing platform known for accelerating revenue for online businesses using the channels they own like email, web, and mobile. Enabling companies to leverage these owned marketing channels, Klaviyo makes it easy to store, access, analyze and use transactional and behavioral data to power highly-targeted customer and prospect communications. And unlike other marketing platforms, Klaviyo doesn't force companies to compromise between advanced functionality or ease of use - so companies of all sizes are able to maximize their sales quickly. That's why over 28,000+ innovative companies like Unilever, Custom Ink and Eventbrite sell more with Klaviyo.\",\n          \"At Alector, our mission is to develop therapies that empower the immune system to cure neurodegeneration. Our team is solely focused on developing cures for some of the most challenging diseases facing our society. We are supported in this mission by experienced and accomplished scientists and board members, leading healthcare investors and some of the most innovative pharma companies.\\n\\nPlease join us in driving the development of new therapies that seek to transform patients' lives. Autonomy and collaboration in tackling challenges is what you are seeking and would like to be part of a hardworking team where everyone has a voice, please join in our mission!\\nAs the Head of Biometrics and Data Management, you will help in developing a strategy and support execution of our development programs. You will have the responsibility and contribute across assigned clinical trials across our therapeutic areas.\\nDuring your first year, your goals will include:\\nDefine how you will contribute to Alector's overall 3-5 year vision to continually improve our clinical development strategy\\nLead and build world-class biostatistics and group.\\nWork in collaboration with internal and external partners in the study design, support endpoint selection and sample size calculations, analysis, interpretation, and publication of clinical trial data\\nExecute protocols, statistical analysis plans, study reports, ensure statistical integrity of presentations and publications of clinical studies by applying your past experiences and provide oversight to data management processes and team\\nLead and work on significant and unique issues that require exercising independent judgment and developing/adapting methodology\\nOffer scientific and technical input within the study team and cross-functionally\\nManage workflow to ensure quality, prioritization, and timeliness across multiple programs\\nHandle external vendors and serve as a key Biostats/data management strategic direction and liaison with external organizations for the studies\\nEnsure up to date knowledge of the industry and academic developments in the Neuroscience, Immuno-Oncology and Orphan disease fields and apply to clinical study design and analysis\\nWe would love to hear from you if you have:\\n7+ years of experience in academia or industry. Pharmaceutical/biotech/CRO industry experience preferred\\nPhD in Biostatistics and or related field\\nStrong knowledge of theoretical and applied statistics and clinical trial data management\\nHands-on ability to drive and lead strategies for clinical trials of drug candidates from first-in-human testing to all later phases of clinical investigation, including pivotal Phase 2/3 studies and NDA/BLA submissions\\nDemonstrated success leading the statistical strategy, analysis, and design of clinical development programs across therapeutic areas and oversight of data management teams\\nKnowledge of applicable regulatory rules and guidelines, e.g., ICH, GCP, HIPAA\\nExperience programming in SAS or R and other relevant statistical software solutions\\nStrong application of innovative study designs and developing milestone criteria (e.g. Go/No Go criteria)\\nDetailed knowledge of adaptive designs, Bayesian methodology, trial simulation, and data modeling is strongly preferred\\nAt Alector, we believe that high-performing teams include people from a wide variety of backgrounds and experiences who can challenge each other\\u2019s assumptions with fresh perspectives and bring creative ideas to the table. We are committed to building an open, diverse, and inclusive environment for all employees. We do not discriminate on the basis of race, religion, color, national origin, sex, gender, sexual orientation, age, marital status, veteran status, disability status, or any other characteristics protected under applicable federal, state, or local laws.\\nAlector is a great place to learn and experiment. If you excel in a dynamic environment where everyone is committed to finding a cure, where you\\u2019ll drive growth, this is the role for you. There is no limit to how far you can go with us.\\n\\nBenefits\\nWhile we\\u2019ve focused on what to look forward to during the first year and beyond, Day One is great, too: committed and driven colleagues, a bold and important company goal, state-of-the-art brand-new brightly-lit offices in the heart of the biotech area, competitive compensation and benefits. But these matter only if you\\u2019re excited to build and own something great, and take on these challenges with us. Come join us.\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Rating\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1.4103288795924829,\n        \"min\": -1.0,\n        \"max\": 5.0,\n        \"num_unique_values\": 32,\n        \"samples\": [\n          3.0,\n          2.8,\n          4.9\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Company Name\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 432,\n        \"samples\": [\n          \"A-Line Staffing Solutions\\n4.1\",\n          \"Powertek\\n3.6\",\n          \"II-VI Incorporated\\n3.3\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Location\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 207,\n        \"samples\": [\n          \"Winters, TX\",\n          \"Memphis, TN\",\n          \"Lehi, UT\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Headquarters\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 229,\n        \"samples\": [\n          \"Simi Valley, CA\",\n          \"San Mateo, CA\",\n          \"Mc Lean, VA\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Size\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 9,\n        \"samples\": [\n          \"-1\",\n          \"5001 to 10000 employees\",\n          \"201 to 500 employees\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Founded\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 756,\n        \"min\": -1,\n        \"max\": 2019,\n        \"num_unique_values\": 103,\n        \"samples\": [\n          1999,\n          1918,\n          1948\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Type of ownership\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 13,\n        \"samples\": [\n          \"College / University\",\n          \"Hospital\",\n          \"Nonprofit Organization\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Industry\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 58,\n        \"samples\": [\n          \"Insurance Carriers\",\n          \"Computer Hardware & Software\",\n          \"Oil & Gas Services\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Sector\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 23,\n        \"samples\": [\n          \"Real Estate\",\n          \"Finance\",\n          \"Insurance\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Revenue\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 14,\n        \"samples\": [\n          \"$50 to $100 million (USD)\",\n          \"$5 to $10 million (USD)\",\n          \"Unknown / Non-Applicable\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Competitors\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 108,\n        \"samples\": [\n          \"Raytheon Technologies, Northrop Grumman, Booz Allen Hamilton\",\n          \"Northwestern Mutual\",\n          \"Square, PayPal, H&R Block\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":19}]},{"cell_type":"code","source":["df.head()"],"metadata":{"id":"cfdbpS7G2XFh","colab":{"base_uri":"https://localhost:8080/","height":394},"executionInfo":{"status":"ok","timestamp":1751475166991,"user_tz":-330,"elapsed":67,"user":{"displayName":"Ashish Porwal","userId":"08640336265301712342"}},"outputId":"7416bac0-842a-42d7-806b-8e34b491b088"},"execution_count":8,"outputs":[{"output_type":"execute_result","data":{"text/plain":["   Gender  breakfast  calories_chicken  calories_day  calories_scone  coffee  \\\n","0       2          1               430           NaN           315.0       1   \n","1       1          1               610           3.0           420.0       2   \n","2       1          1               720           4.0           420.0       2   \n","3       1          1               430           3.0           420.0       2   \n","4       1          1               720           2.0           420.0       2   \n","\n","                       comfort_food        comfort_food_reasons  \\\n","0                              none       we dont have comfort    \n","1       chocolate, chips, ice cream        Stress, bored, anger   \n","2   frozen yogurt, pizza, fast food             stress, sadness   \n","3  Pizza, Mac and cheese, ice cream                     Boredom   \n","4      Ice cream, chocolate, chips   Stress, boredom, cravings    \n","\n","   comfort_food_reasons_coded  cook  ...  soup  sports thai_food  \\\n","0                         9.0   2.0  ...   1.0     1.0         1   \n","1                         1.0   3.0  ...   1.0     1.0         2   \n","2                         1.0   1.0  ...   1.0     2.0         5   \n","3                         2.0   2.0  ...   1.0     2.0         5   \n","4                         1.0   1.0  ...   1.0     1.0         4   \n","\n","   tortilla_calories  turkey_calories  type_sports  veggies_day  vitamins  \\\n","0             1165.0              345   car racing            5         1   \n","1              725.0              690  Basketball             4         2   \n","2             1165.0              500         none            5         1   \n","3              725.0              690          NaN            3         1   \n","4              940.0              500     Softball            4         2   \n","\n","   waffle_calories                    weight  \n","0             1315                       187  \n","1              900                       155  \n","2              900  I'm not answering this.   \n","3             1315             Not sure, 240  \n","4              760                       190  \n","\n","[5 rows x 60 columns]"],"text/html":["\n","  <div id=\"df-5baec1e8-6657-4596-b037-712a72a64f5c\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Gender</th>\n","      <th>breakfast</th>\n","      <th>calories_chicken</th>\n","      <th>calories_day</th>\n","      <th>calories_scone</th>\n","      <th>coffee</th>\n","      <th>comfort_food</th>\n","      <th>comfort_food_reasons</th>\n","      <th>comfort_food_reasons_coded</th>\n","      <th>cook</th>\n","      <th>...</th>\n","      <th>soup</th>\n","      <th>sports</th>\n","      <th>thai_food</th>\n","      <th>tortilla_calories</th>\n","      <th>turkey_calories</th>\n","      <th>type_sports</th>\n","      <th>veggies_day</th>\n","      <th>vitamins</th>\n","      <th>waffle_calories</th>\n","      <th>weight</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>2</td>\n","      <td>1</td>\n","      <td>430</td>\n","      <td>NaN</td>\n","      <td>315.0</td>\n","      <td>1</td>\n","      <td>none</td>\n","      <td>we dont have comfort</td>\n","      <td>9.0</td>\n","      <td>2.0</td>\n","      <td>...</td>\n","      <td>1.0</td>\n","      <td>1.0</td>\n","      <td>1</td>\n","      <td>1165.0</td>\n","      <td>345</td>\n","      <td>car racing</td>\n","      <td>5</td>\n","      <td>1</td>\n","      <td>1315</td>\n","      <td>187</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>610</td>\n","      <td>3.0</td>\n","      <td>420.0</td>\n","      <td>2</td>\n","      <td>chocolate, chips, ice cream</td>\n","      <td>Stress, bored, anger</td>\n","      <td>1.0</td>\n","      <td>3.0</td>\n","      <td>...</td>\n","      <td>1.0</td>\n","      <td>1.0</td>\n","      <td>2</td>\n","      <td>725.0</td>\n","      <td>690</td>\n","      <td>Basketball</td>\n","      <td>4</td>\n","      <td>2</td>\n","      <td>900</td>\n","      <td>155</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>720</td>\n","      <td>4.0</td>\n","      <td>420.0</td>\n","      <td>2</td>\n","      <td>frozen yogurt, pizza, fast food</td>\n","      <td>stress, sadness</td>\n","      <td>1.0</td>\n","      <td>1.0</td>\n","      <td>...</td>\n","      <td>1.0</td>\n","      <td>2.0</td>\n","      <td>5</td>\n","      <td>1165.0</td>\n","      <td>500</td>\n","      <td>none</td>\n","      <td>5</td>\n","      <td>1</td>\n","      <td>900</td>\n","      <td>I'm not answering this.</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>430</td>\n","      <td>3.0</td>\n","      <td>420.0</td>\n","      <td>2</td>\n","      <td>Pizza, Mac and cheese, ice cream</td>\n","      <td>Boredom</td>\n","      <td>2.0</td>\n","      <td>2.0</td>\n","      <td>...</td>\n","      <td>1.0</td>\n","      <td>2.0</td>\n","      <td>5</td>\n","      <td>725.0</td>\n","      <td>690</td>\n","      <td>NaN</td>\n","      <td>3</td>\n","      <td>1</td>\n","      <td>1315</td>\n","      <td>Not sure, 240</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>720</td>\n","      <td>2.0</td>\n","      <td>420.0</td>\n","      <td>2</td>\n","      <td>Ice cream, chocolate, chips</td>\n","      <td>Stress, boredom, cravings</td>\n","      <td>1.0</td>\n","      <td>1.0</td>\n","      <td>...</td>\n","      <td>1.0</td>\n","      <td>1.0</td>\n","      <td>4</td>\n","      <td>940.0</td>\n","      <td>500</td>\n","      <td>Softball</td>\n","      <td>4</td>\n","      <td>2</td>\n","      <td>760</td>\n","      <td>190</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>5 rows × 60 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-5baec1e8-6657-4596-b037-712a72a64f5c')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-5baec1e8-6657-4596-b037-712a72a64f5c button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-5baec1e8-6657-4596-b037-712a72a64f5c');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","    <div id=\"df-90a95702-97dc-4c50-b245-d3e9aa88a88e\">\n","      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-90a95702-97dc-4c50-b245-d3e9aa88a88e')\"\n","                title=\"Suggest charts\"\n","                style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","      </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","      <script>\n","        async function quickchart(key) {\n","          const quickchartButtonEl =\n","            document.querySelector('#' + key + ' button');\n","          quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","          quickchartButtonEl.classList.add('colab-df-spinner');\n","          try {\n","            const charts = await google.colab.kernel.invokeFunction(\n","                'suggestCharts', [key], {});\n","          } catch (error) {\n","            console.error('Error during call to suggestCharts:', error);\n","          }\n","          quickchartButtonEl.classList.remove('colab-df-spinner');\n","          quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","        }\n","        (() => {\n","          let quickchartButtonEl =\n","            document.querySelector('#df-90a95702-97dc-4c50-b245-d3e9aa88a88e button');\n","          quickchartButtonEl.style.display =\n","            google.colab.kernel.accessAllowed ? 'block' : 'none';\n","        })();\n","      </script>\n","    </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"df"}},"metadata":{},"execution_count":8}]},{"cell_type":"code","source":["df.columns"],"metadata":{"id":"5K2YUge92YpH","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1751475583775,"user_tz":-330,"elapsed":779,"user":{"displayName":"Ashish Porwal","userId":"08640336265301712342"}},"outputId":"654a1505-5dc3-44d4-cbe5-16afb8f3c857"},"execution_count":21,"outputs":[{"output_type":"execute_result","data":{"text/plain":["Index(['index', 'Job Title', 'Salary Estimate', 'Job Description', 'Rating',\n","       'Company Name', 'Location', 'Headquarters', 'Size', 'Founded',\n","       'Type of ownership', 'Industry', 'Sector', 'Revenue', 'Competitors'],\n","      dtype='object')"]},"metadata":{},"execution_count":21}]},{"cell_type":"code","source":["df.shape"],"metadata":{"id":"2gBL__gl38Jb","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1751475589111,"user_tz":-330,"elapsed":710,"user":{"displayName":"Ashish Porwal","userId":"08640336265301712342"}},"outputId":"5bec4882-a72c-4c22-e881-f7e87f14a907"},"execution_count":22,"outputs":[{"output_type":"execute_result","data":{"text/plain":["(672, 15)"]},"metadata":{},"execution_count":22}]},{"cell_type":"code","source":["df.describe()"],"metadata":{"id":"xfEkv-3v6MGf","collapsed":true,"colab":{"base_uri":"https://localhost:8080/","height":300},"executionInfo":{"status":"ok","timestamp":1751475592175,"user_tz":-330,"elapsed":999,"user":{"displayName":"Ashish Porwal","userId":"08640336265301712342"}},"outputId":"46c1db6b-4c18-4fe0-fff6-5a39755f5f26"},"execution_count":23,"outputs":[{"output_type":"execute_result","data":{"text/plain":["            index      Rating      Founded\n","count  672.000000  672.000000   672.000000\n","mean   335.500000    3.518601  1635.529762\n","std    194.133974    1.410329   756.746640\n","min      0.000000   -1.000000    -1.000000\n","25%    167.750000    3.300000  1917.750000\n","50%    335.500000    3.800000  1995.000000\n","75%    503.250000    4.300000  2009.000000\n","max    671.000000    5.000000  2019.000000"],"text/html":["\n","  <div id=\"df-fc426062-7741-42d3-9f4b-f096dd266ac2\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>index</th>\n","      <th>Rating</th>\n","      <th>Founded</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>count</th>\n","      <td>672.000000</td>\n","      <td>672.000000</td>\n","      <td>672.000000</td>\n","    </tr>\n","    <tr>\n","      <th>mean</th>\n","      <td>335.500000</td>\n","      <td>3.518601</td>\n","      <td>1635.529762</td>\n","    </tr>\n","    <tr>\n","      <th>std</th>\n","      <td>194.133974</td>\n","      <td>1.410329</td>\n","      <td>756.746640</td>\n","    </tr>\n","    <tr>\n","      <th>min</th>\n","      <td>0.000000</td>\n","      <td>-1.000000</td>\n","      <td>-1.000000</td>\n","    </tr>\n","    <tr>\n","      <th>25%</th>\n","      <td>167.750000</td>\n","      <td>3.300000</td>\n","      <td>1917.750000</td>\n","    </tr>\n","    <tr>\n","      <th>50%</th>\n","      <td>335.500000</td>\n","      <td>3.800000</td>\n","      <td>1995.000000</td>\n","    </tr>\n","    <tr>\n","      <th>75%</th>\n","      <td>503.250000</td>\n","      <td>4.300000</td>\n","      <td>2009.000000</td>\n","    </tr>\n","    <tr>\n","      <th>max</th>\n","      <td>671.000000</td>\n","      <td>5.000000</td>\n","      <td>2019.000000</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-fc426062-7741-42d3-9f4b-f096dd266ac2')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-fc426062-7741-42d3-9f4b-f096dd266ac2 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-fc426062-7741-42d3-9f4b-f096dd266ac2');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","    <div id=\"df-b6caa76c-8b71-412c-a0ec-cc1db00589ed\">\n","      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-b6caa76c-8b71-412c-a0ec-cc1db00589ed')\"\n","                title=\"Suggest charts\"\n","                style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","      </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","      <script>\n","        async function quickchart(key) {\n","          const quickchartButtonEl =\n","            document.querySelector('#' + key + ' button');\n","          quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","          quickchartButtonEl.classList.add('colab-df-spinner');\n","          try {\n","            const charts = await google.colab.kernel.invokeFunction(\n","                'suggestCharts', [key], {});\n","          } catch (error) {\n","            console.error('Error during call to suggestCharts:', error);\n","          }\n","          quickchartButtonEl.classList.remove('colab-df-spinner');\n","          quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","        }\n","        (() => {\n","          let quickchartButtonEl =\n","            document.querySelector('#df-b6caa76c-8b71-412c-a0ec-cc1db00589ed button');\n","          quickchartButtonEl.style.display =\n","            google.colab.kernel.accessAllowed ? 'block' : 'none';\n","        })();\n","      </script>\n","    </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","summary":"{\n  \"name\": \"df\",\n  \"rows\": 8,\n  \"fields\": [\n    {\n      \"column\": \"index\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 241.9733071796642,\n        \"min\": 0.0,\n        \"max\": 672.0,\n        \"num_unique_values\": 7,\n        \"samples\": [\n          672.0,\n          335.5,\n          503.25\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Rating\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 236.56870676866504,\n        \"min\": -1.0,\n        \"max\": 672.0,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          3.5186011904761907,\n          3.8,\n          672.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Founded\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 786.7987135686087,\n        \"min\": -1.0,\n        \"max\": 2019.0,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          1635.529761904762,\n          1995.0,\n          672.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":23}]},{"cell_type":"code","source":["df.info()"],"metadata":{"id":"CtNILwc1SYX6","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1751475596211,"user_tz":-330,"elapsed":461,"user":{"displayName":"Ashish Porwal","userId":"08640336265301712342"}},"outputId":"ccc6d8b3-ff5a-4115-91a0-5430aebf7446"},"execution_count":24,"outputs":[{"output_type":"stream","name":"stdout","text":["<class 'pandas.core.frame.DataFrame'>\n","RangeIndex: 672 entries, 0 to 671\n","Data columns (total 15 columns):\n"," #   Column             Non-Null Count  Dtype  \n","---  ------             --------------  -----  \n"," 0   index              672 non-null    int64  \n"," 1   Job Title          672 non-null    object \n"," 2   Salary Estimate    672 non-null    object \n"," 3   Job Description    672 non-null    object \n"," 4   Rating             672 non-null    float64\n"," 5   Company Name       672 non-null    object \n"," 6   Location           672 non-null    object \n"," 7   Headquarters       672 non-null    object \n"," 8   Size               672 non-null    object \n"," 9   Founded            672 non-null    int64  \n"," 10  Type of ownership  672 non-null    object \n"," 11  Industry           672 non-null    object \n"," 12  Sector             672 non-null    object \n"," 13  Revenue            672 non-null    object \n"," 14  Competitors        672 non-null    object \n","dtypes: float64(1), int64(2), object(12)\n","memory usage: 78.9+ KB\n"]}]},{"cell_type":"code","source":["df['Sector'].unique()"],"metadata":{"id":"QXb5EV2j662d","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1751475654881,"user_tz":-330,"elapsed":470,"user":{"displayName":"Ashish Porwal","userId":"08640336265301712342"}},"outputId":"7dea50c4-cf28-460d-e88f-b05efc1cbab3"},"execution_count":26,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array(['Insurance', 'Business Services', 'Manufacturing',\n","       'Information Technology', 'Biotech & Pharmaceuticals', 'Retail',\n","       'Oil, Gas, Energy & Utilities', 'Government', 'Health Care',\n","       'Finance', 'Aerospace & Defense', '-1',\n","       'Transportation & Logistics', 'Media', 'Telecommunications',\n","       'Real Estate', 'Travel & Tourism', 'Agriculture & Forestry',\n","       'Education', 'Accounting & Legal', 'Non-Profit',\n","       'Construction, Repair & Maintenance', 'Consumer Services'],\n","      dtype=object)"]},"metadata":{},"execution_count":26}]},{"cell_type":"code","source":["print(df.columns.tolist())\n"],"metadata":{"id":"tRzl8MuDJzHw","executionInfo":{"status":"ok","timestamp":1751476814837,"user_tz":-330,"elapsed":457,"user":{"displayName":"Ashish Porwal","userId":"08640336265301712342"}},"outputId":"8786ceed-b67a-4da5-ee49-3b5b626bb114","colab":{"base_uri":"https://localhost:8080/"}},"execution_count":57,"outputs":[{"output_type":"stream","name":"stdout","text":["['index', 'Job Title', 'Job Description', 'Rating', 'Company Name', 'Location', 'Headquarters', 'Size', 'Founded', 'Type of ownership', 'Industry', 'Sector', 'Revenue', 'Competitors', 'Sector_Encoded']\n"]}]},{"cell_type":"code","source":["df['Salary Estimate'] = df['Salary Estimate'].apply(lambda x: x.split('(')[0]) # apply to every element x. Split them from where ( begins and select only the first part using [0]"],"metadata":{"id":"4XkrhAPnHQ_q","executionInfo":{"status":"ok","timestamp":1751475673061,"user_tz":-330,"elapsed":749,"user":{"displayName":"Ashish Porwal","userId":"08640336265301712342"}}},"execution_count":27,"outputs":[]},{"cell_type":"code","source":["df['Salary Estimate'].unique()"],"metadata":{"id":"RWIokkbYJaOK","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1751475678394,"user_tz":-330,"elapsed":922,"user":{"displayName":"Ashish Porwal","userId":"08640336265301712342"}},"outputId":"4d56bd2f-e72c-4a7c-c3df-ae9a41d6a972"},"execution_count":28,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array(['$137K-$171K ', '$75K-$131K ', '$79K-$131K ', '$99K-$132K ',\n","       '$90K-$109K ', '$101K-$165K ', '$56K-$97K ', '$79K-$106K ',\n","       '$71K-$123K ', '$90K-$124K ', '$91K-$150K ', '$141K-$225K ',\n","       '$145K-$225K', '$79K-$147K ', '$122K-$146K ', '$112K-$116K ',\n","       '$110K-$163K ', '$124K-$198K ', '$79K-$133K ', '$69K-$116K ',\n","       '$31K-$56K ', '$95K-$119K ', '$212K-$331K ', '$66K-$112K ',\n","       '$128K-$201K ', '$138K-$158K ', '$80K-$132K ', '$87K-$141K ',\n","       '$92K-$155K ', '$105K-$167K '], dtype=object)"]},"metadata":{},"execution_count":28}]},{"cell_type":"code","source":["df['Salary Estimate'] = df['Salary Estimate'].apply(lambda x: x.replace('K','').replace('$','')) # replacing $ and K with nothing"],"metadata":{"id":"CW-aYYuPJelb","colab":{"base_uri":"https://localhost:8080/","height":547},"executionInfo":{"status":"error","timestamp":1751476798826,"user_tz":-330,"elapsed":459,"user":{"displayName":"Ashish Porwal","userId":"08640336265301712342"}},"outputId":"aa43e775-e63b-4208-e759-45276916a321"},"execution_count":56,"outputs":[{"output_type":"error","ename":"KeyError","evalue":"'Salary Estimate'","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mKeyError\u001b[0m                                  Traceback (most recent call last)","\u001b[0;32m/usr/local/lib/python3.11/dist-packages/pandas/core/indexes/base.py\u001b[0m in \u001b[0;36mget_loc\u001b[0;34m(self, key)\u001b[0m\n\u001b[1;32m   3804\u001b[0m         \u001b[0;32mtry\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 3805\u001b[0;31m             \u001b[0;32mreturn\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_engine\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mget_loc\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mcasted_key\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   3806\u001b[0m         \u001b[0;32mexcept\u001b[0m \u001b[0mKeyError\u001b[0m \u001b[0;32mas\u001b[0m \u001b[0merr\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32mindex.pyx\u001b[0m in \u001b[0;36mpandas._libs.index.IndexEngine.get_loc\u001b[0;34m()\u001b[0m\n","\u001b[0;32mindex.pyx\u001b[0m in \u001b[0;36mpandas._libs.index.IndexEngine.get_loc\u001b[0;34m()\u001b[0m\n","\u001b[0;32mpandas/_libs/hashtable_class_helper.pxi\u001b[0m in \u001b[0;36mpandas._libs.hashtable.PyObjectHashTable.get_item\u001b[0;34m()\u001b[0m\n","\u001b[0;32mpandas/_libs/hashtable_class_helper.pxi\u001b[0m in \u001b[0;36mpandas._libs.hashtable.PyObjectHashTable.get_item\u001b[0;34m()\u001b[0m\n","\u001b[0;31mKeyError\u001b[0m: 'Salary Estimate'","\nThe above exception was the direct cause of the following exception:\n","\u001b[0;31mKeyError\u001b[0m                                  Traceback (most recent call last)","\u001b[0;32m/tmp/ipython-input-56-502592665.py\u001b[0m in \u001b[0;36m<cell line: 0>\u001b[0;34m()\u001b[0m\n\u001b[0;32m----> 1\u001b[0;31m \u001b[0mdf\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m'Salary Estimate'\u001b[0m\u001b[0;34m]\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mdf\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m'Salary Estimate'\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mapply\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;32mlambda\u001b[0m \u001b[0mx\u001b[0m\u001b[0;34m:\u001b[0m \u001b[0mx\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mreplace\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m'K'\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m''\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mreplace\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m'$'\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m''\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m)\u001b[0m \u001b[0;31m# replacing $ and K with nothing\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m","\u001b[0;32m/usr/local/lib/python3.11/dist-packages/pandas/core/frame.py\u001b[0m in \u001b[0;36m__getitem__\u001b[0;34m(self, key)\u001b[0m\n\u001b[1;32m   4100\u001b[0m             \u001b[0;32mif\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mcolumns\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mnlevels\u001b[0m \u001b[0;34m>\u001b[0m \u001b[0;36m1\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   4101\u001b[0m                 \u001b[0;32mreturn\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_getitem_multilevel\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mkey\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 4102\u001b[0;31m             \u001b[0mindexer\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mcolumns\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mget_loc\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mkey\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   4103\u001b[0m             \u001b[0;32mif\u001b[0m \u001b[0mis_integer\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mindexer\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   4104\u001b[0m                 \u001b[0mindexer\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0;34m[\u001b[0m\u001b[0mindexer\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.11/dist-packages/pandas/core/indexes/base.py\u001b[0m in \u001b[0;36mget_loc\u001b[0;34m(self, key)\u001b[0m\n\u001b[1;32m   3810\u001b[0m             ):\n\u001b[1;32m   3811\u001b[0m                 \u001b[0;32mraise\u001b[0m \u001b[0mInvalidIndexError\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mkey\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 3812\u001b[0;31m             \u001b[0;32mraise\u001b[0m \u001b[0mKeyError\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mkey\u001b[0m\u001b[0;34m)\u001b[0m \u001b[0;32mfrom\u001b[0m \u001b[0merr\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   3813\u001b[0m         \u001b[0;32mexcept\u001b[0m \u001b[0mTypeError\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   3814\u001b[0m             \u001b[0;31m# If we have a listlike key, _check_indexing_error will raise\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;31mKeyError\u001b[0m: 'Salary Estimate'"]}]},{"cell_type":"code","source":["df['Salary Estimate'].unique()"],"metadata":{"id":"PxMEy6sGK8La","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1751475689569,"user_tz":-330,"elapsed":669,"user":{"displayName":"Ashish Porwal","userId":"08640336265301712342"}},"outputId":"a2122565-922e-45fe-a558-969e31535ea9"},"execution_count":30,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array(['137-171 ', '75-131 ', '79-131 ', '99-132 ', '90-109 ', '101-165 ',\n","       '56-97 ', '79-106 ', '71-123 ', '90-124 ', '91-150 ', '141-225 ',\n","       '145-225', '79-147 ', '122-146 ', '112-116 ', '110-163 ',\n","       '124-198 ', '79-133 ', '69-116 ', '31-56 ', '95-119 ', '212-331 ',\n","       '66-112 ', '128-201 ', '138-158 ', '80-132 ', '87-141 ', '92-155 ',\n","       '105-167 '], dtype=object)"]},"metadata":{},"execution_count":30}]},{"cell_type":"code","source":["import re\n","\n","def extract_salary(s, part):\n","    if isinstance(s, str):\n","        match = re.findall(r'\\d+', s.replace(',', ''))\n","        if len(match) >= 2:\n","            return int(match[0]) if part == 'min' else int(match[1])\n","    return None\n","\n","df['Minimum Salary Estimate'] = df['Salary Estimate'].apply(lambda x: extract_salary(x, 'min'))\n","df['Maximum Salary Estimate'] = df['Salary Estimate'].apply(lambda x: extract_salary(x, 'max'))\n"],"metadata":{"id":"BSXRdts3LG_V","colab":{"base_uri":"https://localhost:8080/","height":547},"executionInfo":{"status":"error","timestamp":1751476717652,"user_tz":-330,"elapsed":1714,"user":{"displayName":"Ashish Porwal","userId":"08640336265301712342"}},"outputId":"5a711ddf-71e9-441e-9dea-4b4d0dda17b6"},"execution_count":55,"outputs":[{"output_type":"error","ename":"KeyError","evalue":"'Salary Estimate'","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mKeyError\u001b[0m                                  Traceback (most recent call last)","\u001b[0;32m/usr/local/lib/python3.11/dist-packages/pandas/core/indexes/base.py\u001b[0m in \u001b[0;36mget_loc\u001b[0;34m(self, key)\u001b[0m\n\u001b[1;32m   3804\u001b[0m         \u001b[0;32mtry\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 3805\u001b[0;31m             \u001b[0;32mreturn\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_engine\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mget_loc\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mcasted_key\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   3806\u001b[0m         \u001b[0;32mexcept\u001b[0m \u001b[0mKeyError\u001b[0m \u001b[0;32mas\u001b[0m \u001b[0merr\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32mindex.pyx\u001b[0m in \u001b[0;36mpandas._libs.index.IndexEngine.get_loc\u001b[0;34m()\u001b[0m\n","\u001b[0;32mindex.pyx\u001b[0m in \u001b[0;36mpandas._libs.index.IndexEngine.get_loc\u001b[0;34m()\u001b[0m\n","\u001b[0;32mpandas/_libs/hashtable_class_helper.pxi\u001b[0m in \u001b[0;36mpandas._libs.hashtable.PyObjectHashTable.get_item\u001b[0;34m()\u001b[0m\n","\u001b[0;32mpandas/_libs/hashtable_class_helper.pxi\u001b[0m in \u001b[0;36mpandas._libs.hashtable.PyObjectHashTable.get_item\u001b[0;34m()\u001b[0m\n","\u001b[0;31mKeyError\u001b[0m: 'Salary Estimate'","\nThe above exception was the direct cause of the following exception:\n","\u001b[0;31mKeyError\u001b[0m                                  Traceback (most recent call last)","\u001b[0;32m/tmp/ipython-input-55-1311217102.py\u001b[0m in \u001b[0;36m<cell line: 0>\u001b[0;34m()\u001b[0m\n\u001b[1;32m      8\u001b[0m     \u001b[0;32mreturn\u001b[0m \u001b[0;32mNone\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      9\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m---> 10\u001b[0;31m \u001b[0mdf\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m'Minimum Salary Estimate'\u001b[0m\u001b[0;34m]\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mdf\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m'Salary Estimate'\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mapply\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;32mlambda\u001b[0m \u001b[0mx\u001b[0m\u001b[0;34m:\u001b[0m \u001b[0mextract_salary\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mx\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m'min'\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m     11\u001b[0m \u001b[0mdf\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m'Maximum Salary Estimate'\u001b[0m\u001b[0;34m]\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mdf\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m'Salary Estimate'\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mapply\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;32mlambda\u001b[0m \u001b[0mx\u001b[0m\u001b[0;34m:\u001b[0m \u001b[0mextract_salary\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mx\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m'max'\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.11/dist-packages/pandas/core/frame.py\u001b[0m in \u001b[0;36m__getitem__\u001b[0;34m(self, key)\u001b[0m\n\u001b[1;32m   4100\u001b[0m             \u001b[0;32mif\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mcolumns\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mnlevels\u001b[0m \u001b[0;34m>\u001b[0m \u001b[0;36m1\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   4101\u001b[0m                 \u001b[0;32mreturn\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_getitem_multilevel\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mkey\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 4102\u001b[0;31m             \u001b[0mindexer\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mcolumns\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mget_loc\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mkey\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   4103\u001b[0m             \u001b[0;32mif\u001b[0m \u001b[0mis_integer\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mindexer\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   4104\u001b[0m                 \u001b[0mindexer\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0;34m[\u001b[0m\u001b[0mindexer\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.11/dist-packages/pandas/core/indexes/base.py\u001b[0m in \u001b[0;36mget_loc\u001b[0;34m(self, key)\u001b[0m\n\u001b[1;32m   3810\u001b[0m             ):\n\u001b[1;32m   3811\u001b[0m                 \u001b[0;32mraise\u001b[0m \u001b[0mInvalidIndexError\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mkey\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 3812\u001b[0;31m             \u001b[0;32mraise\u001b[0m \u001b[0mKeyError\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mkey\u001b[0m\u001b[0;34m)\u001b[0m \u001b[0;32mfrom\u001b[0m \u001b[0merr\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   3813\u001b[0m         \u001b[0;32mexcept\u001b[0m \u001b[0mTypeError\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   3814\u001b[0m             \u001b[0;31m# If we have a listlike key, _check_indexing_error will raise\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;31mKeyError\u001b[0m: 'Salary Estimate'"]}]},{"cell_type":"code","source":["df['Company Name'] = df['Company Name'].apply(lambda x: x.split('\\n')[0])"],"metadata":{"id":"kAHsKrJVRLMr","executionInfo":{"status":"ok","timestamp":1751476003466,"user_tz":-330,"elapsed":697,"user":{"displayName":"Ashish Porwal","userId":"08640336265301712342"}}},"execution_count":35,"outputs":[]},{"cell_type":"code","source":["df['Company Name'].unique()"],"metadata":{"id":"FKigli-URZBo","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1751476006308,"user_tz":-330,"elapsed":462,"user":{"displayName":"Ashish Porwal","userId":"08640336265301712342"}},"outputId":"c840d119-d637-4886-8317-4838fc356c85"},"execution_count":36,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array(['Healthfirst', 'ManTech', 'Analysis Group', 'INFICON',\n","       'Affinity Solutions', 'HG Insights', 'Novartis', 'iRobot',\n","       'Intuit - Data', 'XSELL Technologies', 'Novetta', '1904labs',\n","       'PNNL', 'Old World Industries', 'Mathematica Policy Research',\n","       'Guzman & Griffin Technologies (GGTI)', 'Upside Business Travel',\n","       'Buckman', 'Insight Enterprises, Inc.', 'Tower Health',\n","       'Triplebyte', 'PulsePoint', 'Exponent', 'Guardian Life',\n","       'Spectrum Communications and Consulting', 'Oversight Systems',\n","       'LSQ', 'MIT Lincoln Laboratory', 'Kingfisher Systems', 'Formation',\n","       'Cohere Health', 'Acuity Insurance', 'Chef', 'Puget Sound Energy',\n","       'Sandhills Global', 'A Place for Mom', 'Great-Circle Technologies',\n","       'Edmunds.com', 'Cambridge Associates, LLC',\n","       'Liberty Mutual Insurance', 'Cenlar', 'Arsenal Biosciences',\n","       'Eversight', 'Pfizer', 'Klaviyo', 'Intellectual Ventures',\n","       'GovTech', 'Quick Base', 'Giving Assistant', 'Takeda', 'Netskope',\n","       'IT Concepts', 'iSeatz', 'Summa Health System', 'Benson Hill',\n","       'Twitter', 'Postmates - Corporate HQ', 'Envision LLC', 'Swiss Re',\n","       'Systems & Technology Research', 'Dermalogica',\n","       'Bayview Asset Management', 'Via Transportation', 'Grid Dynamics',\n","       'Tempus Labs', 'CareDx', 'IZEA', 'Autodesk', 'Caterpillar',\n","       'New England Biolabs', 'Allied Solutions', 'The Knot Worldwide',\n","       'IFG Companies', 'Amyris', 'AstraZeneca', 'Powertek',\n","       'Object Partners', 'The Mom Project', 'Lightspeed Systems',\n","       'Stripe', 'Comprehensive Healthcare',\n","       'Fullpower Technologies, Inc.', 'Mars', 'NuWave Solutions',\n","       'Merrick Bank', 'QOMPLX', 'GutCheck',\n","       'Inter-American Development Bank', 'Avlino', 'Stratagem Group',\n","       'Evidation', 'Tecolote Research', 'Tivity Health', 'hc1',\n","       'HP Inc.', 'SAIC', 'AllianceBernstein', 'Big Huge Games',\n","       'Maxar Technologies', 'Phantom AI', 'Noblis', 'Spring Health',\n","       'ClearEdge', 'GetWellNetwork', 'TACG Solutions', 'Scoop',\n","       'Montway Inc', 'Juniper Networks', 'Notion Labs', 'Lendio',\n","       'Direct Agents', 'NAVEX Global', 'Upstart', 'AppLovin',\n","       'ISO New England', 'Relativity', 'Tempo Automation', 'MITRE',\n","       'Expedition Technology, Inc.', 'Evidera',\n","       'Plymouth Rock Assurance', 'Crown Bioscience', 'GNS Healthcare',\n","       'OneMagnify', 'SPECTRUM', 'Advanced BioScience Laboratories',\n","       'Procore Technologies', 'Ritedose', 'Covid-19 Search Partners',\n","       'bioMérieux', 'Radical Convergence', 'Leidos', 'Demandbase',\n","       'Shelter Insurance', 'USAC',\n","       'General Dynamics Information Technology', 'Offerpad',\n","       'Magna International Inc.', 'United BioSource', 'Kelly', 'C3.ai',\n","       'Quartet Health', 'Midland Credit Management',\n","       'Resurgent Capital Services', 'webfx.com', 'Argo Group US',\n","       'BWX Technologies', 'Life360', 'MassMutual', 'Natera', 'Genentech',\n","       'Ntrepid', 'Constant Contact', 'Sage Intacct', 'Shape Security',\n","       'SkillSoniq', 'Joby Aviation',\n","       \"Cook Children's Health Care System\", 'Rubius Therapeutics',\n","       'GreatAmerica Financial Services', 'Coverent', 'Mteq',\n","       'Rocket Lawyer', 'Alion Science & Technology', 'Protolabs',\n","       'Quest Integrity', 'Phoenix Operations Group', 'Dice.com',\n","       'Southwest Research Institute', 'The Buffalo Group',\n","       'Central California Alliance for Health',\n","       'Security Finance Corporation of Spartanburg', 'Opendoor',\n","       'Global Data Management Inc', 'Photon Infotech', 'REE',\n","       'Riverside Research Institute', 'T. Rowe Price', 'Encode, Inc.',\n","       'Brighthouse Financial', 'II-VI Incorporated', 'Surya Systems',\n","       'PayPal', 'Predictive Research Inc', '1010data', 'Gigya',\n","       'Genesis Research', 'Sanofi', 'XPO Logistics', 'Trace Data',\n","       'Descript', 'Rincon Research Corporation', 'Better Hire',\n","       'Parker Hannifin', 'Gallup', 'Insider Inc',\n","       'Rapid Value Solutions', 'Battelle', 'The Drive Media, Inc.',\n","       'Pacific Northwest National Laboratory', 'US Pharmacopeia',\n","       'Itlize Global', 'eBay', 'Paige', 'ABIOMED', 'Comcast',\n","       'Metronome, LLC', 'Lawrence Livermore National Lab',\n","       'FHLBank Pittsburgh', 'Jacobs', 'Underwriters Laboratories',\n","       'Altus Group', 'Jobot', 'Trovetechs Inc', 'Oshkosh Corporation',\n","       'Mackin', 'PETADATA', 'VBeyond Corporation', 'Take-Two',\n","       'Colony Brands', 'Capio Group', 'SleePare', 'ShorePoint',\n","       'Dolphin', 'TE Connectivity', 'State of Virginia', 'TA Digital',\n","       'Market America Inc', 'TrueAccord', 'ALTA IT Services',\n","       'Kollasoft Inc.', 'ASRC Federal Holding Company',\n","       'Adwait Algorithm', 'Cambridge FX', 'Metromile', 'Criteo',\n","       'Advance Sourcing Concepts', 'Enterprise Solutions Inc',\n","       'Microagility', 'Conch Technologies, Inc', 'GSK',\n","       'Rainmaker Resources, LLC', '22nd Century Technologies', 'Huxley',\n","       'FM Systems', 'B4Corp',\n","       'Blue Cross and Blue Shield of North Carolina', 'Jane Street',\n","       'SSATI', 'Solving IT International Inc',\n","       'The Davey Tree Expert Company', 'Centauri', 'Stride Search',\n","       'Software Engineering Institute', 'TechProjects', '7Park Data',\n","       'Ameritas Life Insurance Corp', 'Western Digital',\n","       'Shimento, Inc.', 'Averity', 'Praxis Engineering',\n","       'Point72 Ventures',\n","       'Johns Hopkins University Applied Physics Laboratory',\n","       'Cambridge Mobile Telematics', 'Blend360', 'Nolij Consulting',\n","       'Hatch Data Inc', 'Compass Consulting Group', 'SolutionIT, Inc.',\n","       'Perspecta', 'Smith Hanley Associates', 'Allen Institute',\n","       'Eliassen Group', 'Bayside Solutions', 'Evolve Vacation Rental',\n","       'AgreeYa Solutions', 'Carolina Power & Light Co',\n","       'New Iron Group, Inc.', 'Travelers', 'Twitch', 'Biogen', 'HireAi',\n","       'Mentor Graphics', 'WCG (WIRB-Copernicus Group)',\n","       'Visionary Integration Professionals', 'Dynetics',\n","       'Navy Federal Credit Union', 'Exact Sciences Corporation',\n","       'Community Behavioral Health', 'Reynolds American', 'LifeOmic',\n","       'Visionist, Inc.', 'Navio', 'Concerto HealthAI', 'Evolvinc',\n","       'PROPRIUS', 'TECHNOCRAFT Solutions', 'Latitude, Inc.',\n","       'Royce Geospatial', 'CyberCoders', 'Booz Allen Hamilton Inc.',\n","       'Burns & McDonnell', 'InvenTech Info', 'Robert Half',\n","       'Conflux Systems Inc.', 'Voice', 'Falcon IT & Staffing Solutions',\n","       'DataLab USA', 'Werner Enterprises Inc', 'PeopleCom',\n","       'VANTA Partners', 'Blue Icy Water, LLC',\n","       \"Farmer's Business Network, Inc.\", 'Sonde Health', 'Maxiom',\n","       'Change Healthcare', 'DCS Corp', 'Hive (CA)',\n","       'Hackensack Meridian Health', 'Net2Source Inc.', 'The Trade Desk',\n","       'IBM', 'Knowesis Inc.', 'MoTek Technologies', 'HPOne',\n","       'Blue Cloak LLC', 'TBWA\\\\Chiat\\\\Day', 'ThreeBridge Solutions',\n","       'Numeric, LLC', 'Centraprise', 'DW Simpson', 'LinQuest',\n","       'Trexquant Investment', 'Fleetcor', 'Radiant Digital',\n","       'Child Care Aware of America', 'IntelliPro Group Inc.', 'USI',\n","       'Apex Systems', 'Pragmatics, Inc.', 'Crossover Health',\n","       'Lorven Technologies Inc', 'Gap Inc.', 'Tygart Technology, Inc',\n","       'Murray Resources', 'New York Technology Partners',\n","       'Two95 International Inc.', 'Sophinea', 'CRS Group',\n","       'Blackstone Talent Group', 'Roche', 'Creative Circle',\n","       'Blue Horizon Tek Solutions', 'Sharpedge Solutions Inc',\n","       'Alaka`ina Foundation Family of Companies', 'Hexagon US Federal',\n","       'Monte Rosa Therapeutics', 'Comtech Global Inc', 'Aveshka, Inc.',\n","       '10x Genomics', 'CompuForce', '1-800-Flowers', 'Aptive',\n","       'JCD Staffing', 'Thumbtack', 'MILVETS Systems Technology, Inc.',\n","       'Apple', 'Kforce', 'OppLoans', 'Brillient', 'Xator Corporation',\n","       'HAN IT Staffing Inc.', 'Infinitive Inc', 'New Relic', 'ICW Group',\n","       'NYSTEC', 'E3 Federal Solutions', 'Peraton', 'Group O',\n","       'CaptiveAire', 'Temboo', 'Kibo', 'AeroVironment',\n","       'Applied Research Laboratories', 'Conagen', 'Alector',\n","       'Homology Medicines, Inc.', 'Inland Empire Health Plan',\n","       'Sandia National Laboratories', 'CIA', 'Maven Wave Partners',\n","       'Ovative Group', 'Kognetics', 'Envision Healthcare',\n","       'ConsumerTrack', 'Meridian Knowledge Solutions', 'UST Global',\n","       'IMG Systems', 'Trident Systems Inc', 'GrainBridge, LLC',\n","       'First Health Group', 'Sprezzatura Management Consulting',\n","       'Progress Rail, A Caterpillar Company', 'Axiologic Solutions',\n","       'Indigo Slate', 'Cubic', 'Advanced Bio-Logic Solutions Corp',\n","       'Alignment Healthcare', 'WGSN', 'ISYS Technologies, Inc.',\n","       'TransVoyant', 'Geotab', 'EGlobalTech',\n","       'Central Business Solutions, Inc', 'KeHE Distributors',\n","       'Moxie Software', 'Unicom Technologies INC', 'Americo Life',\n","       'Tokio Marine HCC', 'CACI International', 'Berico Technologies',\n","       'Kehe Food Distributors', 'Pactera Edge', 'Qurate Retail Group',\n","       'A-Line Staffing Solutions', 'Clear Ridge Defense',\n","       'Criterion Systems, Inc.', 'Foundation Medicine', 'TRANZACT',\n","       'JKGT', 'AccessHope', 'ChaTeck Incorporated'], dtype=object)"]},"metadata":{},"execution_count":36}]},{"cell_type":"code","source":["df.drop('Salary Estimate', inplace=True, axis=1)"],"metadata":{"id":"ylSsSL-3Rpb4","executionInfo":{"status":"ok","timestamp":1751476059101,"user_tz":-330,"elapsed":542,"user":{"displayName":"Ashish Porwal","userId":"08640336265301712342"}}},"execution_count":37,"outputs":[]},{"cell_type":"code","source":["from sklearn.preprocessing import LabelEncoder # OneHotEncoding, Scaling & normalization, Splitting test/train data\n","\n","le = LabelEncoder()\n","df['Sector_Encoded'] = le.fit_transform(df['Sector'])\n","\n","# Create a mapping dictionary\n","encoding_mapping = dict(zip(df['Sector_Encoded'].unique(), df['Sector'].unique()))\n","\n","# Display the mapping\n","print(\"Mapping between Original Values and Encoded Values:\")\n","for original_value, encoded_value in encoding_mapping.items():\n","    print(f\"{original_value}: {encoded_value}\")"],"metadata":{"id":"DQ75zSI9SUzD","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1751476080950,"user_tz":-330,"elapsed":837,"user":{"displayName":"Ashish Porwal","userId":"08640336265301712342"}},"outputId":"5c393389-347c-49e3-8754-c54e64229632"},"execution_count":40,"outputs":[{"output_type":"stream","name":"stdout","text":["Mapping between Original Values and Encoded Values:\n","13: Insurance\n","5: Business Services\n","14: Manufacturing\n","12: Information Technology\n","4: Biotech & Pharmaceuticals\n","19: Retail\n","17: Oil, Gas, Energy & Utilities\n","10: Government\n","11: Health Care\n","9: Finance\n","2: Aerospace & Defense\n","0: -1\n","21: Transportation & Logistics\n","15: Media\n","20: Telecommunications\n","18: Real Estate\n","22: Travel & Tourism\n","3: Agriculture & Forestry\n","8: Education\n","1: Accounting & Legal\n","16: Non-Profit\n","6: Construction, Repair & Maintenance\n","7: Consumer Services\n"]}]},{"cell_type":"code","source":["df.sort_values(by='Rating', ascending = False)"],"metadata":{"id":"gwMCictNU8GG","colab":{"base_uri":"https://localhost:8080/","height":877},"executionInfo":{"status":"ok","timestamp":1751476100336,"user_tz":-330,"elapsed":485,"user":{"displayName":"Ashish Porwal","userId":"08640336265301712342"}},"outputId":"44764dc5-4143-4170-8466-1b0d2494a720"},"execution_count":41,"outputs":[{"output_type":"execute_result","data":{"text/plain":["     index                               Job Title  \\\n","435    435                          Data Scientist   \n","43      43           Scientist - Molecular Biology   \n","32      32                          Data Scientist   \n","412    412                          Data Scientist   \n","405    405        Senior Machine Learning Engineer   \n","..     ...                                     ...   \n","154    154        ELISA RESEARCH SCIENTIST (CV-15)   \n","613    613                          Data Scientist   \n","615    615                          Data Scientist   \n","637    637                          Data Scientist   \n","650    650  Scientist / Group Lead, Cancer Biology   \n","\n","                                       Job Description  Rating  \\\n","435  Job Description\\nWe are looking for the sharpe...     5.0   \n","43   ArsenalBio’s mission is to develop efficacious...     5.0   \n","32   Cohere Health is simplifying healthcare for pa...     5.0   \n","412  Job Description\\nAre you an experienced Data S...     5.0   \n","405  We are looking for an experienced engineer wit...     5.0   \n","..                                                 ...     ...   \n","154  Covaxx, a subsidiary of the UBI Group, has joi...    -1.0   \n","613  DESCRIPTION\\n\\nGrainBridge is seeking a talent...    -1.0   \n","615  Position Description\\n\\nSprezzatura seeks a Da...    -1.0   \n","637  Job Description\\nWorking at Sophinea\\n\\nSophin...    -1.0   \n","650  Scientist / Group Lead, Cancer Biology\\nLocati...    -1.0   \n","\n","                          Company Name                 Location  \\\n","435                          PeopleCom               McLean, VA   \n","43                 Arsenal Biosciences  South San Francisco, CA   \n","32                       Cohere Health               Boston, MA   \n","412                           PROPRIUS            Sunnyvale, CA   \n","405                           LifeOmic              Raleigh, NC   \n","..                                 ...                      ...   \n","154           Covid-19 Search Partners            Hauppauge, NY   \n","613                   GrainBridge, LLC                Omaha, NE   \n","615  Sprezzatura Management Consulting           Washington, VA   \n","637                           Sophinea            Chantilly, VA   \n","650            Monte Rosa Therapeutics            Cambridge, MA   \n","\n","                Headquarters                 Size  Founded  Type of ownership  \\\n","435               Reston, VA    1 to 50 employees       -1  Company - Private   \n","43   South San Francisco, CA  51 to 200 employees     2019  Company - Private   \n","32                Boston, MA    1 to 50 employees     2019  Company - Private   \n","412   London, United Kingdom    1 to 50 employees       -1  Company - Private   \n","405         Indianapolis, IN  51 to 200 employees     2016  Company - Private   \n","..                       ...                  ...      ...                ...   \n","154                       -1                   -1       -1                 -1   \n","613                       -1                   -1       -1                 -1   \n","615               McLean, VA              Unknown       -1  Company - Private   \n","637                       -1    1 to 50 employees       -1            Unknown   \n","650                       -1                   -1       -1                 -1   \n","\n","                                    Industry                     Sector  \\\n","435                                       -1                         -1   \n","43                 Biotech & Pharmaceuticals  Biotech & Pharmaceuticals   \n","32                               IT Services     Information Technology   \n","412  Enterprise Software & Network Solutions     Information Technology   \n","405  Enterprise Software & Network Solutions     Information Technology   \n","..                                       ...                        ...   \n","154                                       -1                         -1   \n","613                                       -1                         -1   \n","615                                       -1                         -1   \n","637                                       -1                         -1   \n","650                                       -1                         -1   \n","\n","                      Revenue Competitors  Sector_Encoded  \n","435    $1 to $5 million (USD)          -1               0  \n","43   Unknown / Non-Applicable          -1               4  \n","32   Unknown / Non-Applicable          -1              12  \n","412  Unknown / Non-Applicable          -1              12  \n","405  Unknown / Non-Applicable          -1              12  \n","..                        ...         ...             ...  \n","154                        -1          -1               0  \n","613                        -1          -1               0  \n","615  Unknown / Non-Applicable          -1               0  \n","637  Unknown / Non-Applicable          -1               0  \n","650                        -1          -1               0  \n","\n","[672 rows x 15 columns]"],"text/html":["\n","  <div id=\"df-8d8e4a47-c400-49d5-91e6-d3513fd3b466\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>index</th>\n","      <th>Job Title</th>\n","      <th>Job Description</th>\n","      <th>Rating</th>\n","      <th>Company Name</th>\n","      <th>Location</th>\n","      <th>Headquarters</th>\n","      <th>Size</th>\n","      <th>Founded</th>\n","      <th>Type of ownership</th>\n","      <th>Industry</th>\n","      <th>Sector</th>\n","      <th>Revenue</th>\n","      <th>Competitors</th>\n","      <th>Sector_Encoded</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>435</th>\n","      <td>435</td>\n","      <td>Data Scientist</td>\n","      <td>Job Description\\nWe are looking for the sharpe...</td>\n","      <td>5.0</td>\n","      <td>PeopleCom</td>\n","      <td>McLean, VA</td>\n","      <td>Reston, VA</td>\n","      <td>1 to 50 employees</td>\n","      <td>-1</td>\n","      <td>Company - Private</td>\n","      <td>-1</td>\n","      <td>-1</td>\n","      <td>$1 to $5 million (USD)</td>\n","      <td>-1</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>43</th>\n","      <td>43</td>\n","      <td>Scientist - Molecular Biology</td>\n","      <td>ArsenalBio’s mission is to develop efficacious...</td>\n","      <td>5.0</td>\n","      <td>Arsenal Biosciences</td>\n","      <td>South San Francisco, CA</td>\n","      <td>South San Francisco, CA</td>\n","      <td>51 to 200 employees</td>\n","      <td>2019</td>\n","      <td>Company - Private</td>\n","      <td>Biotech &amp; Pharmaceuticals</td>\n","      <td>Biotech &amp; Pharmaceuticals</td>\n","      <td>Unknown / Non-Applicable</td>\n","      <td>-1</td>\n","      <td>4</td>\n","    </tr>\n","    <tr>\n","      <th>32</th>\n","      <td>32</td>\n","      <td>Data Scientist</td>\n","      <td>Cohere Health is simplifying healthcare for pa...</td>\n","      <td>5.0</td>\n","      <td>Cohere Health</td>\n","      <td>Boston, MA</td>\n","      <td>Boston, MA</td>\n","      <td>1 to 50 employees</td>\n","      <td>2019</td>\n","      <td>Company - Private</td>\n","      <td>IT Services</td>\n","      <td>Information Technology</td>\n","      <td>Unknown / Non-Applicable</td>\n","      <td>-1</td>\n","      <td>12</td>\n","    </tr>\n","    <tr>\n","      <th>412</th>\n","      <td>412</td>\n","      <td>Data Scientist</td>\n","      <td>Job Description\\nAre you an experienced Data S...</td>\n","      <td>5.0</td>\n","      <td>PROPRIUS</td>\n","      <td>Sunnyvale, CA</td>\n","      <td>London, United Kingdom</td>\n","      <td>1 to 50 employees</td>\n","      <td>-1</td>\n","      <td>Company - Private</td>\n","      <td>Enterprise Software &amp; Network Solutions</td>\n","      <td>Information Technology</td>\n","      <td>Unknown / Non-Applicable</td>\n","      <td>-1</td>\n","      <td>12</td>\n","    </tr>\n","    <tr>\n","      <th>405</th>\n","      <td>405</td>\n","      <td>Senior Machine Learning Engineer</td>\n","      <td>We are looking for an experienced engineer wit...</td>\n","      <td>5.0</td>\n","      <td>LifeOmic</td>\n","      <td>Raleigh, NC</td>\n","      <td>Indianapolis, IN</td>\n","      <td>51 to 200 employees</td>\n","      <td>2016</td>\n","      <td>Company - Private</td>\n","      <td>Enterprise Software &amp; Network Solutions</td>\n","      <td>Information Technology</td>\n","      <td>Unknown / Non-Applicable</td>\n","      <td>-1</td>\n","      <td>12</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>154</th>\n","      <td>154</td>\n","      <td>ELISA RESEARCH SCIENTIST (CV-15)</td>\n","      <td>Covaxx, a subsidiary of the UBI Group, has joi...</td>\n","      <td>-1.0</td>\n","      <td>Covid-19 Search Partners</td>\n","      <td>Hauppauge, NY</td>\n","      <td>-1</td>\n","      <td>-1</td>\n","      <td>-1</td>\n","      <td>-1</td>\n","      <td>-1</td>\n","      <td>-1</td>\n","      <td>-1</td>\n","      <td>-1</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>613</th>\n","      <td>613</td>\n","      <td>Data Scientist</td>\n","      <td>DESCRIPTION\\n\\nGrainBridge is seeking a talent...</td>\n","      <td>-1.0</td>\n","      <td>GrainBridge, LLC</td>\n","      <td>Omaha, NE</td>\n","      <td>-1</td>\n","      <td>-1</td>\n","      <td>-1</td>\n","      <td>-1</td>\n","      <td>-1</td>\n","      <td>-1</td>\n","      <td>-1</td>\n","      <td>-1</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>615</th>\n","      <td>615</td>\n","      <td>Data Scientist</td>\n","      <td>Position Description\\n\\nSprezzatura seeks a Da...</td>\n","      <td>-1.0</td>\n","      <td>Sprezzatura Management Consulting</td>\n","      <td>Washington, VA</td>\n","      <td>McLean, VA</td>\n","      <td>Unknown</td>\n","      <td>-1</td>\n","      <td>Company - Private</td>\n","      <td>-1</td>\n","      <td>-1</td>\n","      <td>Unknown / Non-Applicable</td>\n","      <td>-1</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>637</th>\n","      <td>637</td>\n","      <td>Data Scientist</td>\n","      <td>Job Description\\nWorking at Sophinea\\n\\nSophin...</td>\n","      <td>-1.0</td>\n","      <td>Sophinea</td>\n","      <td>Chantilly, VA</td>\n","      <td>-1</td>\n","      <td>1 to 50 employees</td>\n","      <td>-1</td>\n","      <td>Unknown</td>\n","      <td>-1</td>\n","      <td>-1</td>\n","      <td>Unknown / Non-Applicable</td>\n","      <td>-1</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>650</th>\n","      <td>650</td>\n","      <td>Scientist / Group Lead, Cancer Biology</td>\n","      <td>Scientist / Group Lead, Cancer Biology\\nLocati...</td>\n","      <td>-1.0</td>\n","      <td>Monte Rosa Therapeutics</td>\n","      <td>Cambridge, MA</td>\n","      <td>-1</td>\n","      <td>-1</td>\n","      <td>-1</td>\n","      <td>-1</td>\n","      <td>-1</td>\n","      <td>-1</td>\n","      <td>-1</td>\n","      <td>-1</td>\n","      <td>0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>672 rows × 15 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-8d8e4a47-c400-49d5-91e6-d3513fd3b466')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-8d8e4a47-c400-49d5-91e6-d3513fd3b466 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-8d8e4a47-c400-49d5-91e6-d3513fd3b466');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","    <div id=\"df-30942868-dae2-45f9-93f7-a40bfcf1b131\">\n","      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-30942868-dae2-45f9-93f7-a40bfcf1b131')\"\n","                title=\"Suggest charts\"\n","                style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","      </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","      <script>\n","        async function quickchart(key) {\n","          const quickchartButtonEl =\n","            document.querySelector('#' + key + ' button');\n","          quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","          quickchartButtonEl.classList.add('colab-df-spinner');\n","          try {\n","            const charts = await google.colab.kernel.invokeFunction(\n","                'suggestCharts', [key], {});\n","          } catch (error) {\n","            console.error('Error during call to suggestCharts:', error);\n","          }\n","          quickchartButtonEl.classList.remove('colab-df-spinner');\n","          quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","        }\n","        (() => {\n","          let quickchartButtonEl =\n","            document.querySelector('#df-30942868-dae2-45f9-93f7-a40bfcf1b131 button');\n","          quickchartButtonEl.style.display =\n","            google.colab.kernel.accessAllowed ? 'block' : 'none';\n","        })();\n","      </script>\n","    </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","summary":"{\n  \"name\": \"df\",\n  \"rows\": 672,\n  \"fields\": [\n    {\n      \"column\": \"index\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 194,\n        \"min\": 0,\n        \"max\": 671,\n        \"num_unique_values\": 672,\n        \"samples\": [\n          381,\n          628,\n          561\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Job Title\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 172,\n        \"samples\": [\n          \"Data Scientist / Machine Learning Expert\",\n          \"Computational Scientist\",\n          \"Data Scientist, Applied Machine Learning - Bay Area\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Job Description\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 489,\n        \"samples\": [\n          \"What are we looking for in a Data Analyst?\\n\\nAs a member of the Information Services department, the Data Analyst supports Comprehensive?s technology and business initiatives by coordinating the collection, storage, and utilization of essential data. This position will work closely with leadership and other staff to determine data needs for specific projects or ad hoc requests, and then gather, interpret, and present the information to the team. The work of the Data Analyst will impact day-to-day clinic operations as well as business decisions, so a high degree of accuracy, thoroughness, and timeliness are essential. Previous experience performing data analytics in the healthcare field is required.\\n\\nData Analyst duties may include:\\nintegrating data from internal & external sources and performing extract, transform, and load operations to data in various applications\\nanalyzing data to identify and interpret patterns or trends in data sets\\nperforming data audits to identify problem areas & implementing strategies to optimize data integrity and process improvements\\nassisting with the design & implementation of database warehouse structure and developing standards for the design of data elements\\nsupporting the implementation, testing, and validation of data & software systems\\nassisting with ongoing data architecture processes & governance\\nproviding Tier II technical support to employees\\ndocumenting all work as necessary\\nEducation & Experience: Bachelor's degree in computer science or a related field and three years of related data analysis experience in a healthcare setting.\\n\\nOther Requirements: Driver's License, Vehicle Liability Insurance\",\n          \"Join our team dedicated to developing and executing innovative solutions in support of customer mission success.\\n\\nJob Description:\\n\\nNovetta is seeking a skilled Data Science Instructor to support a fast paced, innovative project supporting our client in the field of data science and AI/Machine Learning.\\n\\nBasic Qualifications:\\nSME skill level\\n15+ years of experience in data science or a related field\\nAbility to become familiar with current client priorities, programs and issues in order to adapt training programs to reflect changes in client mission, structure, regulations, or processes.\\nExcellent oral, written, and interpersonal communication skills\\nOutstanding facilitation skills to manage group processes and elicit student participation\\nAnalytic and problem-solving skills\\nDemonstrated ability to apply structured analysis methods to various types of data to establish trends, determine variability, and diagnose the effect on training curricula.\\nAbility to work independently and as part of a team\\nSecurity Clearance:\\nAn active TS/SCI w/Poly clearance\\n\\nNovetta, from complexity to clarity.\\n\\nNovetta delivers highly scalable advanced analytics and secure technology solutions to address challenges of national and global significance. Focused on mission success, Novetta pioneers disruptive technologies in machine learning, data analytics, full-spectrum cyber, cloud engineering, open source analytics, and multi-INT fusion for Defense, Intelligence Community, and Federal Law Enforcement customers. Novetta is headquartered in McLean, VA with over 1,000 employees across the U.S.\\n\\n\\nOur culture is shaped by a commitment to our core values:\\n\\nIntegrity \\u2022 We hold ourselves accountable to the highest standards of integrity and ethics.\\n\\nCustomer Success \\u2022 We strive daily to exceed expectations and achieve customer mission success.\\n\\nEmployee Focus \\u2022 We invest in our employees' professional development and training, respecting individuality, and fostering a culture of diversity and inclusion.\\n\\nInnovation \\u2022 We know that discovering new and innovative ways to solve problems is critical to our success and makes us a great company.\\n\\nExcellence in Execution \\u2022 We take pride in flawless execution as we build a company that is best in class.\\n\\n\\nEarn a REFERRAL BONUS for the qualified people you know.\\nFor more details or to submit a referral, visit bit.ly/NovettaReferrals.\\n\\nNovetta is an equal opportunity/affirmative action employer.\\nAll qualified applicants will receive consideration for employment without regard to sex, gender identity, sexual orientation, race, color, religion, national origin, disability, protected veteran status, age, or any other characteristic protected by law.\",\n          \"Job Brief\\n\\nThe ideal candidate will have previous Data Modeling experience. Strong preference will be given to candidates with an actuarial background in the property and casualty insurance space.\\n\\nOverview\\n\\nIFG Companies is in search of a Data Scientist to join its growing Predictive Modeling team.\\n\\nThe ideal candidate will have previous Data Modeling experience. Strong preference will be given to candidates with an actuarial background in the property and casualty insurance space.\\n\\nResponsibilities\\nBuild predictive and/or Machine Learning models in SAS\\nResearch new statistical and mathematical techniques that are suitable and helpful for solving business related problems\\nPrepare data for modelling and make best/creative use of applicable and available internal or external data\\nIdentifying and integrating new datasets that can be leveraged for modeling efforts\\nSupport related processes around effectively deploying model to business\\nEffectively communicate results in written, oral and presentation formats to technical and non-technical audiences\\nQualifications\\nBachelor\\u2019s degree in statistics, applied mathematics, or related discipline\\n3+ years of Data Modeling or similar experience.\\nExperience with predictive modeling (classification, regression, parameter tuning, optimization criteria, feature selection), preferably with multiple techniques\\nExperience in model validation techniques, model testing and continuous monitoring of model performance\\nExperience in Property & Casualty Insurance is strongly preferred.\\nDemonstrated experience working with large relational data sets.\\nWorking knowledge in SAS, R, Python or another platform to develop and implement predictive models.\\nAbility and willingness to quickly gain knowledge of SAS enterprise guide and enterprise miner.\\nAbility to communicate complex technical information in common language to foster teaching and analytics guidance to internal customers.\\nAdvanced experience in analytics, data cleaning, and predictive modeling.\\nAbility to write queries in SQL.\\nDetail-oriented and ability to work collaboratively\\nPhysical Demands\\nPhysical demands are considered to be that of an office environment, climate controlled, with minimal physical exertion. This position requires prolonged sitting, ability to utilize a computer and interactions with others in meetings or via phone.\\nBenefits\\nWe offer a competitive compensation and benefits package including medical, dental, vision, 401(k), flexible spending, short-term and long-term disability insurance, life insurance, long-term care, education assistance and paid time off.\\nIFG Companies is an equal opportunity employer committed to a diverse workforce. M/F/D/V\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Rating\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1.4103288795924833,\n        \"min\": -1.0,\n        \"max\": 5.0,\n        \"num_unique_values\": 32,\n        \"samples\": [\n          2.1,\n          3.5,\n          2.6\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Company Name\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 432,\n        \"samples\": [\n          \"Trovetechs Inc\",\n          \"Global Data Management Inc\",\n          \"Quartet Health\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Location\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 207,\n        \"samples\": [\n          \"Schaumburg, IL\",\n          \"Herndon, VA\",\n          \"Phoenix, AZ\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Headquarters\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 229,\n        \"samples\": [\n          \"Benicia, CA\",\n          \"Washington, DC\",\n          \"Burlingame, CA\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Size\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 9,\n        \"samples\": [\n          \"10000+ employees\",\n          \"51 to 200 employees\",\n          \"501 to 1000 employees\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Founded\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 756,\n        \"min\": -1,\n        \"max\": 2019,\n        \"num_unique_values\": 103,\n        \"samples\": [\n          2006,\n          1908,\n          1932\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Type of ownership\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 13,\n        \"samples\": [\n          \"Self-employed\",\n          \"Private Practice / Firm\",\n          \"Company - Private\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Industry\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 58,\n        \"samples\": [\n          \"-1\",\n          \"Staffing & Outsourcing\",\n          \"Miscellaneous Manufacturing\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Sector\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 23,\n        \"samples\": [\n          \"Telecommunications\",\n          \"Health Care\",\n          \"-1\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Revenue\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 14,\n        \"samples\": [\n          \"$2 to $5 billion (USD)\",\n          \"$10+ billion (USD)\",\n          \"$1 to $5 million (USD)\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Competitors\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 108,\n        \"samples\": [\n          \"H&M, Inditex, Fast Retailing\",\n          \"MIT Lincoln Laboratory, Lockheed Martin, Northrop Grumman\",\n          \"Raytheon Technologies, Northrop Grumman, Booz Allen Hamilton\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Sector_Encoded\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 5,\n        \"min\": 0,\n        \"max\": 22,\n        \"num_unique_values\": 23,\n        \"samples\": [\n          20,\n          11,\n          0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":41}]},{"cell_type":"code","source":["df['Founded'].unique()"],"metadata":{"id":"vcX1TxDoXJFT","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1751476105691,"user_tz":-330,"elapsed":440,"user":{"displayName":"Ashish Porwal","userId":"08640336265301712342"}},"outputId":"3e79ff1d-3579-499d-8dcc-c98ad56bc6e2"},"execution_count":42,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([1993, 1968, 1981, 2000, 1998, 2010, 1996, 1990, 1983, 2014, 2012,\n","       2016, 1965, 1973, 1986, 1997, 2015, 1945, 1988, 2017, 2011, 1967,\n","       1860, 1992, 2003, 1951, 2005, 2019, 1925, 2008, 1999, 1978, 1966,\n","       1912, 1958, 2013, 1849, 1781, 1926, 2006, 1994, 1863, 1995,   -1,\n","       1982, 1974, 2001, 1985, 1913, 1971, 1911, 2009, 1959, 2007, 1939,\n","       2002, 1961, 1963, 1969, 1946, 1957, 1953, 1948, 1850, 1851, 2004,\n","       1976, 1918, 1954, 1947, 1955, 2018, 1937, 1917, 1935, 1929, 1820,\n","       1952, 1932, 1894, 1960, 1788, 1830, 1984, 1933, 1880, 1887, 1970,\n","       1942, 1980, 1989, 1908, 1853, 1875, 1914, 1898, 1956, 1977, 1987,\n","       1896, 1972, 1949, 1962])"]},"metadata":{},"execution_count":42}]},{"cell_type":"code","source":["mean_founded = df['Founded'][df['Founded'] != -1].mean()\n","df['Founded'] = df['Founded'].replace(-1, mean_founded).astype(int)\n","df['Founded'].unique()"],"metadata":{"id":"r5epE0H7YrS2","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1751476109686,"user_tz":-330,"elapsed":443,"user":{"displayName":"Ashish Porwal","userId":"08640336265301712342"}},"outputId":"1d4899f6-d4c8-4596-b761-c6780b8bf0a3"},"execution_count":43,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([1993, 1968, 1981, 2000, 1998, 2010, 1996, 1990, 1983, 2014, 2012,\n","       2016, 1965, 1973, 1986, 1997, 2015, 1945, 1988, 2017, 2011, 1967,\n","       1860, 1992, 2003, 1951, 2005, 2019, 1925, 2008, 1999, 1978, 1966,\n","       1912, 1958, 2013, 1849, 1781, 1926, 2006, 1994, 1863, 1995, 1984,\n","       1982, 1974, 2001, 1985, 1913, 1971, 1911, 2009, 1959, 2007, 1939,\n","       2002, 1961, 1963, 1969, 1946, 1957, 1953, 1948, 1850, 1851, 2004,\n","       1976, 1918, 1954, 1947, 1955, 2018, 1937, 1917, 1935, 1929, 1820,\n","       1952, 1932, 1894, 1960, 1788, 1830, 1933, 1880, 1887, 1970, 1942,\n","       1980, 1989, 1908, 1853, 1875, 1914, 1898, 1956, 1977, 1987, 1896,\n","       1972, 1949, 1962])"]},"metadata":{},"execution_count":43}]},{"cell_type":"code","source":["# Select only numeric columns for correlation calculation\n","numeric_df = df.select_dtypes(include=[np.number])\n","\n","# Calculate the correlation matrix\n","correlation = numeric_df.corr()"],"metadata":{"id":"fN6LTJLgZGnD","executionInfo":{"status":"ok","timestamp":1751476583528,"user_tz":-330,"elapsed":412,"user":{"displayName":"Ashish Porwal","userId":"08640336265301712342"}}},"execution_count":50,"outputs":[]},{"cell_type":"code","source":["correlation = df.corr()\n","plt.figure(figsize=(5, 5))\n","sns.heatmap(correlation, vmax=1, square=True,annot=True,cmap='cubehelix')\n","\n","plt.title('Correlation between different fearures')"],"metadata":{"id":"YK7yeUYNZkzN","colab":{"base_uri":"https://localhost:8080/","height":356},"executionInfo":{"status":"error","timestamp":1751476586812,"user_tz":-330,"elapsed":952,"user":{"displayName":"Ashish Porwal","userId":"08640336265301712342"}},"outputId":"b007acd6-4e5f-4d5d-a346-90dc21e7ff52"},"execution_count":51,"outputs":[{"output_type":"error","ename":"ValueError","evalue":"could not convert string to float: 'Sr Data Scientist'","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mValueError\u001b[0m                                Traceback (most recent call last)","\u001b[0;32m/tmp/ipython-input-51-2276253532.py\u001b[0m in \u001b[0;36m<cell line: 0>\u001b[0;34m()\u001b[0m\n\u001b[0;32m----> 1\u001b[0;31m \u001b[0mcorrelation\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mdf\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mcorr\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m      2\u001b[0m \u001b[0mplt\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mfigure\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mfigsize\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;36m5\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;36m5\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      3\u001b[0m \u001b[0msns\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mheatmap\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mcorrelation\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mvmax\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;36m1\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0msquare\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;32mTrue\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0mannot\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;32mTrue\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0mcmap\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;34m'cubehelix'\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      4\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      5\u001b[0m \u001b[0mplt\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mtitle\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m'Correlation between different fearures'\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.11/dist-packages/pandas/core/frame.py\u001b[0m in \u001b[0;36mcorr\u001b[0;34m(self, method, min_periods, numeric_only)\u001b[0m\n\u001b[1;32m  11047\u001b[0m         \u001b[0mcols\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mdata\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mcolumns\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m  11048\u001b[0m         \u001b[0midx\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mcols\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mcopy\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m> 11049\u001b[0;31m         \u001b[0mmat\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mdata\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mto_numpy\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mdtype\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mfloat\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mna_value\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mnp\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mnan\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mcopy\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;32mFalse\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m  11050\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m  11051\u001b[0m         \u001b[0;32mif\u001b[0m \u001b[0mmethod\u001b[0m \u001b[0;34m==\u001b[0m \u001b[0;34m\"pearson\"\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.11/dist-packages/pandas/core/frame.py\u001b[0m in \u001b[0;36mto_numpy\u001b[0;34m(self, dtype, copy, na_value)\u001b[0m\n\u001b[1;32m   1991\u001b[0m         \u001b[0;32mif\u001b[0m \u001b[0mdtype\u001b[0m \u001b[0;32mis\u001b[0m \u001b[0;32mnot\u001b[0m \u001b[0;32mNone\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1992\u001b[0m             \u001b[0mdtype\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mnp\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mdtype\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mdtype\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 1993\u001b[0;31m         \u001b[0mresult\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_mgr\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mas_array\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mdtype\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mdtype\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mcopy\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mcopy\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mna_value\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mna_value\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   1994\u001b[0m         \u001b[0;32mif\u001b[0m \u001b[0mresult\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mdtype\u001b[0m \u001b[0;32mis\u001b[0m \u001b[0;32mnot\u001b[0m \u001b[0mdtype\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1995\u001b[0m             \u001b[0mresult\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mnp\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0masarray\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mresult\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mdtype\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mdtype\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.11/dist-packages/pandas/core/internals/managers.py\u001b[0m in \u001b[0;36mas_array\u001b[0;34m(self, dtype, copy, na_value)\u001b[0m\n\u001b[1;32m   1692\u001b[0m                 \u001b[0marr\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mflags\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mwriteable\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0;32mFalse\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1693\u001b[0m         \u001b[0;32melse\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 1694\u001b[0;31m             \u001b[0marr\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_interleave\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mdtype\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mdtype\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mna_value\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mna_value\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   1695\u001b[0m             \u001b[0;31m# The underlying data was copied within _interleave, so no need\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1696\u001b[0m             \u001b[0;31m# to further copy if copy=True or setting na_value\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.11/dist-packages/pandas/core/internals/managers.py\u001b[0m in \u001b[0;36m_interleave\u001b[0;34m(self, dtype, na_value)\u001b[0m\n\u001b[1;32m   1751\u001b[0m             \u001b[0;32melse\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1752\u001b[0m                 \u001b[0marr\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mblk\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mget_values\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mdtype\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 1753\u001b[0;31m             \u001b[0mresult\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0mrl\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mindexer\u001b[0m\u001b[0;34m]\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0marr\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   1754\u001b[0m             \u001b[0mitemmask\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0mrl\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mindexer\u001b[0m\u001b[0;34m]\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0;36m1\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1755\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;31mValueError\u001b[0m: could not convert string to float: 'Sr Data Scientist'"]}]},{"cell_type":"code","source":["sns.pairplot(df)\n","plt.show()"],"metadata":{"id":"BhlkoIrHZ7F0","colab":{"base_uri":"https://localhost:8080/","height":1000},"executionInfo":{"status":"ok","timestamp":1751476130513,"user_tz":-330,"elapsed":4198,"user":{"displayName":"Ashish Porwal","userId":"08640336265301712342"}},"outputId":"3ca0e1a4-6f40-47d7-a241-79e195815034"},"execution_count":46,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 1000x1000 with 20 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"markdown","metadata":{"id":"d4864b55"},"source":["Now that we have split the 'Salary Estimate' column into 'Minimum Salary Estimate' and 'Maximum Salary Estimate' and converted them to integers, we can continue with the data cleaning and analysis.\n","\n","Here are some potential next steps:\n","\n","1. **Handle missing values**: Check for missing values in the dataset and decide on a strategy to handle them (e.g., imputation, deletion).\n","2. **Analyze job titles**: Explore the different job titles in the dataset and potentially group similar titles.\n","3. **Analyze location data**: Investigate the distribution of jobs across different locations.\n","4. **Explore other categorical features**: Examine other categorical columns like 'Size', 'Type of ownership', 'Industry', and 'Revenue'.\n","5. **Perform more detailed visualizations**: Create visualizations to explore relationships between different features and potentially identify patterns or insights.\n","6. **Feature Engineering**: Create new features that could be useful for analysis or modeling (e.g., calculating the age of the company from the 'Founded' year or calculating the average salary)."]}]}